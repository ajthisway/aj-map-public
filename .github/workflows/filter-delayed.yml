      - name: Fetch and filter delayed points
        run: |
          curl -s https://raw.githubusercontent.com/ajthisway/aj-map-live/main/locations.json -o all.json

          echo "import json, time, datetime" > filter.py
          echo "" >> filter.py
          echo "with open('all.json') as f:" >> filter.py
          echo "    data = json.load(f)" >> filter.py
          echo "" >> filter.py
          echo "now = time.time()" >> filter.py
          echo "filtered = []" >> filter.py
          echo "" >> filter.py
          echo "for point in data:" >> filter.py
          echo "    ts = point.get('timestamp')" >> filter.py
          echo "    ts_value = None" >> filter.py
          echo "" >> filter.py
          echo "    # Try parsing as Unix timestamp (even if it's a string)" >> filter.py
          echo "    try:" >> filter.py
          echo "        ts_value = float(ts)" >> filter.py
          echo "    except (TypeError, ValueError):" >> filter.py
          echo "        pass" >> filter.py
          echo "" >> filter.py
          echo "    # If that failed, try ISO 8601" >> filter.py
          echo "    if ts_value is None and isinstance(ts, str):" >> filter.py
          echo "        try:" >> filter.py
          echo "            dt = datetime.datetime.strptime(ts, '%Y-%m-%dT%H:%M:%S.%fZ')" >> filter.py
          echo "            ts_value = dt.timestamp()" >> filter.py
          echo "        except Exception:" >> filter.py
          echo "            continue" >> filter.py
          echo "" >> filter.py
          echo "    if ts_value and ts_value < now - 86400:" >> filter.py
          echo "        filtered.append(point)" >> filter.py
          echo "" >> filter.py
          echo "with open('delayed_locations.json', 'w') as f:" >> filter.py
          echo "    json.dump(filtered, f, indent=2)" >> filter.py

          python3 filter.py
